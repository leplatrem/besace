name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        folder: [api, thumbnailer]

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Python
      uses: actions/setup-python@v5

    - name: Install uv
      run: pip install uv

    - name: Lint ${{ matrix.folder }}
      working-directory: ${{ matrix.folder }}
      run: make lint

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        folder: [api, thumbnailer]

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Python
      uses: actions/setup-python@v5

    - name: Install uv
      run: pip install uv

    - name: Run tests ${{ matrix.folder }}
      working-directory: ${{ matrix.folder }}
      run: make test

  end2end:
    runs-on: ubuntu-latest
    needs: [test]

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Prepare folders
      run: |
        mkdir -p volumes/tusd-data
        mkdir -p volumes/root-folder
        mkdir -p volumes/thumbnails
        chmod -R 777 volumes/

    - name: Build Docker container
      run: docker compose build

    - name: Run application containers
      run: docker compose up -d

    - name: Check api liveliness
      run: |
        for i in {1..20}; do
          curl --fail --silent --location http://127.0.0.1:8000/api/ && break
          echo "Waiting for app to start..."
          sleep 3
        done

    - uses: actions/setup-node@v4
      with:
        node-version: 24

    - name: Install dependencies
      run: |
        npm ci
        npx playwright install firefox

    - name: Run Playwright Tests
      run: npx playwright test

    - name: Show app logs
      if: failure()
      run: docker compose logs -n 1000 api || true

    - name: Upload Playwright test artifacts
      uses: actions/upload-artifact@v4
      with:
        name: playwright-artifacts
        path: test-results/
